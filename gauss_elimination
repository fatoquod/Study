from datetime import datetime

def gauss_elimination(A, b):
    """
    Выполняет метод Гаусса для решения системы уравнений Ax = b.
    """
    n = len(A)
    
    # Прямой ход метода Гаусса: приведение матрицы A к верхнетреугольному виду
    for i in range(n):
        # Поиск максимального элемента в столбце для выбора главного элемента
        max_index = i
        for k in range(i+1, n):
            if abs(A[k][i]) > abs(A[max_index][i]):
                max_index = k
        # Обмен строк, если необходимо
        if max_index != i:
            A[i], A[max_index] = A[max_index], A[i]
            b[i], b[max_index] = b[max_index], b[i]
        
        # Приведение матрицы к верхнетреугольному виду
        for j in range(i+1, n):
            factor = A[j][i] / A[i][i]
            for k in range(i, n):
                A[j][k] -= factor * A[i][k]
            b[j] -= factor * b[i]
    
    # Обратный ход метода Гаусса: решение системы уравнений
    x = [0] * n
    for i in range(n-1, -1, -1):
        x[i] = b[i] / A[i][i]
        for j in range(i-1, -1, -1):
            b[j] -= A[j][i] * x[i]
    
    return x

# Заданные матрицы A и b
A = [[5, 3, -9, -4, -2],
     [-2, 2, -8, 8, -8],
     [1, 2, -5, -4, -5],
     [1, 8, 6, 5, 6],
     [7, 8, -1, -3, -4]]

b = [-9, -6, 8, -9, -7]

start_time = datetime.now()
# Решение системы уравнений методом Гаусса
solution = gauss_elimination(A, b)
print("Решение x:", solution)
print("Время:", datetime.now()-start_time)
